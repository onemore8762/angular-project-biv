{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employee-add/employee-add.component.ts","./src/app/employee-add/employee-add.component.html","./src/app/employee-card/employee-card.component.ts","./src/app/employee-card/employee-card.component.html","./src/app/employees-list/employees-list.component.ts","./src/app/employees-list/employees-list.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/store/employees.actions.ts","./src/app/store/employees.reducer.ts","./src/app/store/employees.selectors.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {EmployeeAddComponent} from \"./employee-add/employee-add.component\";\r\nimport {EmployeesListComponent} from \"./employees-list/employees-list.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: EmployeeAddComponent },\r\n  { path: 'list', component: EmployeesListComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-project-biv';\n}\n","<div class=\"main\">\r\n  <app-header></app-header>\r\n  <div class=\"content-wrapper\">\r\n    <div class=\"content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatTabsModule} from \"@angular/material/tabs\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {StoreModule} from \"@ngrx/store\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {ReactiveFormsModule} from \"@angular/forms\";\r\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\r\n\r\nimport {HeaderComponent} from \"./header/header.component\";\r\nimport {EmployeeCardComponent} from './employee-card/employee-card.component';\r\nimport {EmployeesListComponent} from './employees-list/employees-list.component';\r\nimport {EmployeeAddComponent} from './employee-add/employee-add.component';\r\n\r\nimport {employeesReducer, metaReducerLocalStorage} from \"./store/employees.reducer\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HeaderComponent,\r\n        EmployeeCardComponent,\r\n        EmployeesListComponent,\r\n        EmployeeAddComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        MatTabsModule,\r\n        MatButtonModule,\r\n        MatSnackBarModule,\r\n        MatInputModule,\r\n        ReactiveFormsModule,\r\n        StoreModule.forRoot(\r\n            {employeesEntries: employeesReducer},\r\n            {metaReducers: [metaReducerLocalStorage]}\r\n        ),\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Store} from \"@ngrx/store\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {addEmployee} from \"../store/employees.actions\";\r\n\r\ninterface IEmployeeForm {\r\n    name: FormControl<string>\r\n    surname: FormControl<string>\r\n    patronymic: FormControl<string>\r\n}\r\n\r\n@Component({\r\n    selector: 'app-employee-add',\r\n    templateUrl: './employee-add.component.html',\r\n    styleUrls: ['./employee-add.component.scss']\r\n})\r\nexport class EmployeeAddComponent {\r\n    userForm = new FormGroup<IEmployeeForm>({\r\n        name: new FormControl('', {nonNullable: true, validators: Validators.required}),\r\n        surname: new FormControl('', {nonNullable: true, validators: Validators.required}),\r\n        patronymic: new FormControl('', {nonNullable: true, validators: Validators.required}),\r\n    })\r\n\r\n    constructor(private store: Store, private _snackBar: MatSnackBar) {\r\n    }\r\n\r\n    onSubmit() {\r\n        // Math.random() можно было использовать библу, но решил не тянуть лишнюю зависимость\r\n        // Понимаю что можно было использовать uuId\r\n      if (this.userForm.valid){\r\n          this.store.dispatch(addEmployee({...this.userForm.value, id: Math.random() * 10}))\r\n          this.userForm.reset()\r\n          this._snackBar.open(\r\n              'Сотрудник успешно добавлен',\r\n              'X',\r\n              {duration: 2000, horizontalPosition: \"start\"});\r\n      }\r\n    }\r\n\r\n}\r\n","<h2 class=\"title\">Добавить сотрудника</h2>\r\n<form class=\"form\"\r\n      [formGroup]=\"userForm\"\r\n      novalidate\r\n      (ngSubmit)=\"onSubmit()\">\r\n    <mat-form-field>\r\n        <mat-label>Фамилия</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"surname\"/>\r\n        <mat-error *ngIf=\" userForm.get('surname')?.hasError('required')\">\r\n            Это обязательное поле\r\n        </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field >\r\n        <mat-label>Имя</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"name\"/>\r\n        <mat-error *ngIf=\" userForm.get('name')?.hasError('required')\">\r\n            Это обязательное поле\r\n        </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Отчество</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"patronymic\"/>\r\n        <mat-error *ngIf=\" userForm.get('patronymic')?.hasError('required')\">\r\n            Это обязательное поле\r\n        </mat-error>\r\n    </mat-form-field>\r\n    <button mat-flat-button\r\n            class=\"button\"\r\n            type=\"submit\"\r\n            color=\"primary\">\r\n        <span>ДОБАВИТЬ</span>\r\n    </button>\r\n</form>\r\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {IEmployee} from \"../models/employees.model\";\r\n\r\n@Component({\r\n  selector: 'app-employee-card',\r\n  templateUrl: './employee-card.component.html',\r\n  styleUrls: ['./employee-card.component.scss']\r\n})\r\nexport class EmployeeCardComponent {\r\n  @Input() user: IEmployee\r\n  @Input() index: number\r\n  @Output() removeCard = new EventEmitter<number>()\r\n\r\n  remove(employee: number): void{\r\n    this.removeCard.emit(employee)\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"table\">\r\n        <div class=\"row\">\r\n            <div>Сотрудник № {{index}}</div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"cell\">Фамилия</div>\r\n            <div class=\"cell\">{{user.surname || '...'}}</div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"cell\">Имя</div>\r\n            <div class=\"cell\">{{user.name || '...'}}</div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"cell\">Отчество</div>\r\n            <div class=\"cell\">{{user.patronymic || '...'}}</div>\r\n        </div>\r\n    </div>\r\n\r\n    <button mat-flat-button\r\n            class=\"button\"\r\n            type=\"button\"\r\n            color=\"primary\"\r\n            (click)=\"remove(user.id)\">\r\n        <span>УДАЛИТЬ СОТРУДНИКА</span>\r\n    </button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport {Store} from \"@ngrx/store\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {Observable} from \"rxjs\";\r\nimport {IEmployee} from \"../models/employees.model\";\r\nimport {selectEmployees} from \"../store/employees.selectors\";\r\nimport {removeEmployee} from \"../store/employees.actions\";\r\n\r\n@Component({\r\n  selector: 'app-employees-list',\r\n  templateUrl: './employees-list.component.html',\r\n  styleUrls: ['./employees-list.component.scss']\r\n})\r\nexport class EmployeesListComponent {\r\n  userList$: Observable<IEmployee[]>\r\n\r\n  constructor(private store: Store, private _snackBar: MatSnackBar) {\r\n    this.userList$ = store.select(selectEmployees)\r\n  }\r\n\r\n  removeEmployee(id: number) {\r\n    this.store.dispatch(removeEmployee({id}))\r\n    this._snackBar.open(\r\n      'Сотрудник успешно удален',\r\n      'X',\r\n      {duration: 2000, horizontalPosition: \"start\"}\r\n    );\r\n  }\r\n}\r\n","<h2 class=\"title\">Список сотрудников</h2>\r\n<div class=\"content\" *ngFor=\"let user of (userList$ | async); let idx = index\">\r\n    <app-employee-card\r\n            [user]=\"user\"\r\n            [index]=\"idx + 1\"\r\n            (removeCard)=\"removeEmployee($event)\"\r\n    ></app-employee-card>\r\n</div>\r\n<div class=\"empty\" *ngIf=\"!(userList$ | async)?.length\">\r\n    Список сотрудников пуст\r\n</div>\r\n","import {Component} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent {\r\n  tabs = [\r\n    {label: 'СТРАНИЦА 1', link: '/'},\r\n    {label: 'СТРАНИЦА 2', link: '/list'},\r\n  ];\r\n  activeLink = this.router.url\r\n\r\n  constructor(private router: Router) {\r\n    this.router.events.subscribe((value: any) => {\r\n      if (value.url) {\r\n        this.activeLink = value.url\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"toolbar\" role=\"banner\">\r\n  <nav mat-tab-nav-bar color=\"warn\" [tabPanel]=\"tabPanel\" [backgroundColor]=\"undefined\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tab of tabs\"\r\n       [active]=\"activeLink === tab.link\"\r\n       [routerLink]=\"tab.link\"\r\n       (click)=\"activeLink = tab.link\"\r\n    >\r\n      <span class=\"label\">{{tab.label}}</span>\r\n    </a>\r\n  </nav>\r\n  <mat-tab-nav-panel #tabPanel></mat-tab-nav-panel>\r\n</div>\r\n","import {createAction, props} from \"@ngrx/store\";\r\nimport {IEmployee} from \"../models/employees.model\";\r\n\r\nexport const addEmployee = createAction('Add employee', props<IEmployee>())\r\nexport const removeEmployee = createAction('Remove employee', props<{id: number}>())\r\n","import {ActionReducer, createReducer, INIT, on, UPDATE} from \"@ngrx/store\";\r\nimport {addEmployee, removeEmployee} from \"./employees.actions\";\r\nimport {IEmployee} from \"../models/employees.model\";\r\n\r\n\r\nexport const initialEmployeesEntries: IEmployee[] = []\r\n\r\nexport const employeesReducer = createReducer(\r\n    initialEmployeesEntries,\r\n\r\n  on(addEmployee, (employees, {type, ...employee}) => {\r\n    const employeesClone = [...employees]\r\n    employeesClone.push(employee)\r\n    return employeesClone\r\n  }),\r\n\r\n  on(removeEmployee, (employees,  { id}) => {\r\n    const employeesClone: IEmployee[] = [...employees]\r\n    const found = employeesClone.find(entry => entry.id === id)\r\n    if (found){\r\n      employeesClone.splice(employeesClone.indexOf(found), 1)\r\n    }\r\n    return employeesClone\r\n  })\r\n)\r\n\r\n\r\nexport const metaReducerLocalStorage = (reducer: ActionReducer<any>): ActionReducer<any> => {\r\n  return (state, action) => {\r\n    if (action.type === INIT || action.type == UPDATE) {\r\n      const storageValue = localStorage.getItem(\"state\");\r\n      if (storageValue) {\r\n        try {\r\n          return JSON.parse(storageValue);\r\n        } catch {\r\n          localStorage.removeItem(\"state\");\r\n        }\r\n      }\r\n    }\r\n    const nextState = reducer(state, action);\r\n    localStorage.setItem(\"state\", JSON.stringify(nextState));\r\n    return nextState;\r\n  };\r\n};\r\n","import {createFeatureSelector, createSelector} from \"@ngrx/store\";\r\nimport {IEmployee} from \"../models/employees.model\";\r\n\r\nexport const selectEmployees = createSelector(\r\n  createFeatureSelector('employeesEntries'),\r\n  (state: IEmployee[]) => state\r\n);\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","EmployeeAddComponent","EmployeesListComponent","routes","path","component","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","BrowserAnimationsModule","MatTabsModule","MatButtonModule","StoreModule","MatInputModule","ReactiveFormsModule","MatSnackBarModule","HeaderComponent","EmployeeCardComponent","employeesReducer","metaReducerLocalStorage","AppModule","bootstrap","employeesEntries","metaReducers","declarations","StoreRootModule","FormControl","FormGroup","Validators","addEmployee","ɵɵtext","store","_snackBar","userForm","name","nonNullable","validators","required","surname","patronymic","onSubmit","valid","dispatch","value","id","Math","random","reset","open","duration","horizontalPosition","ɵɵdirectiveInject","Store","i2","MatSnackBar","EmployeeAddComponent_Template","ɵɵlistener","EmployeeAddComponent_Template_form_ngSubmit_2_listener","ɵɵtemplate","EmployeeAddComponent_mat_error_7_Template","EmployeeAddComponent_mat_error_12_Template","EmployeeAddComponent_mat_error_17_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","hasError","tmp_2_0","tmp_3_0","EventEmitter","removeCard","remove","employee","emit","inputs","user","index","outputs","EmployeeCardComponent_Template","EmployeeCardComponent_Template_button_click_20_listener","ɵɵtextInterpolate1","ɵɵtextInterpolate","selectEmployees","removeEmployee","EmployeesListComponent_div_2_Template_app_employee_card_removeCard_1_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","user_r2","idx_r3","userList$","select","EmployeesListComponent_Template","EmployeesListComponent_div_2_Template","EmployeesListComponent_div_4_Template","ɵɵpipeBind1","length","HeaderComponent_a_2_Template_a_click_0_listener","restoredCtx","_r4","tab_r2","$implicit","ctx_r3","activeLink","link","ctx_r0","label","router","tabs","url","events","subscribe","Router","HeaderComponent_Template","HeaderComponent_a_2_Template","_r1","undefined","createAction","props","createReducer","INIT","on","UPDATE","initialEmployeesEntries","employees","type","employeesClone","push","found","find","entry","splice","indexOf","reducer","state","action","storageValue","localStorage","getItem","JSON","parse","removeItem","nextState","setItem","stringify","createFeatureSelector","createSelector","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}